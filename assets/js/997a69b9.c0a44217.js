"use strict";(self.webpackChunkstorybook_addon_badges_docs=self.webpackChunkstorybook_addon_badges_docs||[]).push([[580],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>u});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=o.createContext({}),p=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=p(e.components);return o.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},l=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),c=p(n),l=r,u=c["".concat(d,".").concat(l)]||c[l]||m[l]||a;return n?o.createElement(u,s(s({ref:t},g),{},{components:n})):o.createElement(u,s({ref:t},g))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=l;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}l.displayName="MDXCreateElement"},7356:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1},s="Creating Custom Badges",i={unversionedId:"customising-badges/creating-custom-badges",id:"customising-badges/creating-custom-badges",title:"Creating Custom Badges",description:"Customising preview.ts",source:"@site/docs/customising-badges/creating-custom-badges.md",sourceDirName:"customising-badges",slug:"/customising-badges/creating-custom-badges",permalink:"/storybook-addon-badges/docs/customising-badges/creating-custom-badges",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Customising Badges",permalink:"/storybook-addon-badges/docs/category/customising-badges"},next:{title:"Adding Styles to Badges",permalink:"/storybook-addon-badges/docs/customising-badges/adding-styles-to-badges"}},d={},p=[{value:"Customising <code>preview.ts</code>",id:"customising-previewts",level:2},{value:"Using ENUMS to define badges",id:"using-enums-to-define-badges",level:2}],g={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-custom-badges"},"Creating Custom Badges"),(0,r.kt)("h2",{id:"customising-previewts"},"Customising ",(0,r.kt)("inlineCode",{parentName:"h2"},"preview.ts")),(0,r.kt)("p",null,"It's easy to create a custom badge, you can customise ",(0,r.kt)("inlineCode",{parentName:"p"},".storybook/preview.ts")," to add configuration parameters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title=".storybook/preview.ts"',title:'".storybook/preview.ts"'},"import { addParameters } from '@storybook/react';\n\naddParameters({\n    badgesConfig: {\n        MyCustomBadge: {\n            title: 'My Custom Badge',\n        },\n    },\n});\n")),(0,r.kt)("p",null,"Simply pass in the key which you will use to identify the badge to the ",(0,r.kt)("inlineCode",{parentName:"p"},"badgesConfig")," key of ",(0,r.kt)("inlineCode",{parentName:"p"},"addParameters"),"."),(0,r.kt)("p",null,"When you do this, you must also pass in the ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," of your new custom badge."),(0,r.kt)("admonition",{title:"Using Typescript?",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can get type completion by importing the ",(0,r.kt)("inlineCode",{parentName:"p"},"BadgesConfig")," type and adding it\nto your ",(0,r.kt)("inlineCode",{parentName:"p"},"addParameters")," function."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title=".storybook/preview.ts"',title:'".storybook/preview.ts"'},'import type { BadgesConfig } from "@geometricpanda/storybook-addon-badges";\n\naddParameters({\n    badgesConfig: <BadgesConfig> { ... },\n});\n'))),(0,r.kt)("h2",{id:"using-enums-to-define-badges"},"Using ENUMS to define badges"),(0,r.kt)("admonition",{title:"Using Typescript?",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Avoid magic strings by using an ENUM.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title=".storybook/badges.ts"',title:'".storybook/badges.ts"'},"export enum BADGE {\n    APPROVED = 'approved',\n    PENDING = 'pending',\n    REJECTED = 'rejected'\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title=".storybook/preview.ts"',title:'".storybook/preview.ts"'},"import { BADGE } from './badges.ts'; \nimport type { BadgesConfig } from \"@geometricpanda/storybook-addon-badges\";\n\naddParameters({\n    badgesConfig: <BadgesConfig> {\n        [BADGE.APPROVED]: { ... },\n    },\n});\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="my-component.story.tsx"',title:'"my-component.story.tsx"'},"import { BADGE } from '../.storybook/badges.ts';\n\nexport default {\n  title: 'Path/To/MyComponent',\n  parameters: {\n    badges: [BADGE.APPROVED],\n  },\n};\n")))}m.isMDXComponent=!0}}]);